{"ast":null,"code":"var _jsxFileName = \"/home/mo/Desktop/mohie/react-todo-app/todo-app/src/App.js\";\nimport React, { Component } from \"react\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport Todos from \"./components/Todos\";\nimport Header from \"./components/partials/Header\";\nimport AddTodo from \"./components/AddTodo\";\nimport About from \"./components/partials/About\";\nimport uuid from \"uuid\";\nimport axios from \"axios\";\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      todos: [{\n        id: 1,\n        title: \"Read book\",\n        completed: false\n      }, {\n        id: 2,\n        title: \"Dinner with wife\",\n        completed: false\n      }, {\n        id: 3,\n        title: \"Meet with boss\",\n        completed: false\n      }, {\n        id: 4,\n        title: \"Talk to a friend\",\n        completed: false\n      }, {\n        id: 5,\n        title: \"Read another book\",\n        completed: false\n      }]\n    };\n\n    this.markComplete = id => {\n      this.setState({\n        todos: this.state.todos.map(todo => {\n          if (todo.id === id) {\n            todo.completed = !todo.completed;\n          }\n\n          return todo;\n        })\n      });\n    };\n\n    this.deleteTodo = id => {\n      this.setState({\n        todos: this.state.todos.filter(todo => {\n          return todo.id !== id;\n        })\n      });\n    };\n\n    this.addTodo = title => {\n      const todo = {\n        id: uuid.v4(),\n        title: title,\n        completed: false\n      };\n      this.setState({\n        todos: [...this.state.todos, todo]\n      });\n    };\n  }\n\n  componentDidMount() {\n    axios.get(\"\").then(res => console.log(res.data)).catch(err => console.log(err));\n  }\n\n  render() {\n    return React.createElement(Router, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      render: props => React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, React.createElement(AddTodo, {\n        addTodo: this.addTodo,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }), React.createElement(Todos, {\n        list: this.state.todos,\n        markComplete: this.markComplete,\n        deleteTodo: this.deleteTodo,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/about\",\n      component: About,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    })));\n  }\n\n}\n\nconst TodosUrl = \"https://jsonplaceholder.typicode.com/todos\";\nexport default App;","map":{"version":3,"sources":["/home/mo/Desktop/mohie/react-todo-app/todo-app/src/App.js"],"names":["React","Component","BrowserRouter","Router","Route","Todos","Header","AddTodo","About","uuid","axios","App","state","todos","id","title","completed","markComplete","setState","map","todo","deleteTodo","filter","addTodo","v4","componentDidMount","get","then","res","console","log","data","catch","err","render","props","TodosUrl"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport Todos from \"./components/Todos\";\nimport Header from \"./components/partials/Header\";\nimport AddTodo from \"./components/AddTodo\";\nimport About from \"./components/partials/About\";\nimport uuid from \"uuid\";\nimport axios from \"axios\";\n\nclass App extends Component {\n  state = {\n    todos: [\n      { id: 1, title: \"Read book\", completed: false },\n      { id: 2, title: \"Dinner with wife\", completed: false },\n      { id: 3, title: \"Meet with boss\", completed: false },\n      { id: 4, title: \"Talk to a friend\", completed: false },\n      { id: 5, title: \"Read another book\", completed: false }\n    ]\n  };\n\n  markComplete = id => {\n    this.setState({\n      todos: this.state.todos.map(todo => {\n        if (todo.id === id) {\n          todo.completed = !todo.completed;\n        }\n        return todo;\n      })\n    });\n  };\n\n  deleteTodo = id => {\n    this.setState({\n      todos: this.state.todos.filter(todo => {\n        return todo.id !== id;\n      })\n    });\n  };\n\n  addTodo = title => {\n    const todo = { id: uuid.v4(), title: title, completed: false };\n    this.setState({ todos: [...this.state.todos, todo] });\n  };\n\n  componentDidMount() {\n    axios.get(\"\")\n      .then(res => console.log(res.data))\n      .catch(err => console.log(err));\n  }\n\n  render() {\n    return (\n      <Router>\n        <div className=\"App\">\n          <Header />\n          <Route exact path=\"/\" render={props => (\n            <React.Fragment>\n              <AddTodo addTodo={this.addTodo} />\n              <Todos list={this.state.todos} markComplete={this.markComplete} deleteTodo={this.deleteTodo} />\n            </React.Fragment>\n          )} />\n          <Route path=\"/about\" component={About} />\n        </div>\n      </Router>\n    );\n  }\n}\n\nconst TodosUrl = \"https://jsonplaceholder.typicode.com/todos\";\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}